%% Study impact on other satellites
%
% 
%
% IMPORTANT: it is required to have generated explosions
% (see explosiondatabase.m)
%
% Run of codes requires strict folder structure to work
% as defined in GitHub
% Automatically load and add path of inputs and functions
%
%%%% SEQUENCE
% - Run
% - Input 1: selection of impacted satellite orbit 
%            (orbitdatabase.m is automatically runned, select only one
%            orbit (if not an error will appear))
% - Input 2: selection of debris to be studied
%            (debrisdatabase.m is automatically runned, no need to plot) 
%
%%%% OUTPUT
% plots and table assesing danger on other satellite
% results saved in folder: 03 other satellite
%
%   Author: Marta Lopez Castro
%   Version: July 25, 2024
 
% *********************************************************************
% Copyright 2023 - 2025 David Canales Garcia; All Rights Reserved.
% *********************************************************************


% Select other sat IC

% Select only one orbit
orbitdatabase

% Check if only one orbit was selected and move ICD.mat to 03 other satellite folder 
other = what('03 other satellite');
path_other = other.path;
ICfile_all = append(sp_dir,'\ICD_',desc,'_',string(length(IC_exp)),'.mat');

if ~contains(ICfile_all,'8.mat')
    error('Not only one initial orbit was selected')
end

movefile(ICfile_all,path_other);
ICfile_all = append(path_other,'\ICD_',desc,'_',string(length(IC_exp)),'.mat');

pcd = cd;
cd(sp_dir)
files = dir('*/**');
for i=3:length(files)
    delete(append(files(i).folder,'\',files(i).name))
end
files = dir;
for i=3:length(files)
    rmdir(append(files(i).folder,'\',files(i).name))
end
cd(pcd)
rmdir(sp_dir)

% Delete variables generated by orbitdatabase
clearvars -except ICfile_all

%% Debris load
debrisdatabase

%% Other sat load

% Reload other satellite IC
load('somedata.mat','MU')
sat = load(ICfile_all);

% Propagate other satellite during time of evolution
for i = 1:size(sat.IC_exp,1)

    tspan = 0:0.01:round(max(sat.t0_exp),2);
    tol = 1e-13;
    options = odeset('RelTol',tol,'AbsTol',tol);
    [tsat_unique, ssat_unique] = ode45(@(t, x) cr3bp(t, x, MU, 1), tspan, sat.IC_exp(i,:), options);
    nreps = ceil(tmax/tspan(end));
    tsat_rep = tsat_unique;
    for j=1:nreps-1
        tsat_rep = vertcat(tsat_rep,tsat_unique+j*(tspan(end)+0.01));
    end
    ssat_rep = repmat(ssat_unique,nreps,1);

    tsat{i} = tsat_rep(tsat_rep<=tmax);
    ssat{i} = ssat_rep(tsat_rep<=tmax,:);
    
end


%% plots

% Set folder to store
other = what('03 other satellite');
folder = other.path;
plotname_other = sprintf('sat_%s_orb_%s',extractBetween(ICfile_all,'ICD_','_'),plotname);

% Define variables
[tmin,idx_tmin] = min(t0exp_all); % Find first explosion
s0_fe = s0exp_all(idx_tmin,:); 
div = 8; % Number of IC

IC_other_sat(folder,plotname_other,ssat,ssat_unique,s0_fe,s0_all{1},tsat,tmin) % plot initial conditions of simulation
danger_othersat_plotting(folder,plotname_other,sexp_all,t0exp_all,tmax,ssat) % plot danger zones and expected hits